resource_types:
- name: copr
  type: docker-image
  source:
    repository: quay.io/ahoi/concourse-copr-resource

resources:
- name: container-fedora
  type: docker-image
  source:
    repository: quay.io/drahnr/fedora
    username: ((quay-ratpoison-username))
    password: ((quay-ratpoison-password))
    max_concurrent_downloads: 2
    max_concurrent_uploads: 2

- name: github-release-resource
  type: github-release
  check_every: 60m
  source:
    release: true
    pre_release: true
    owner: signalapp
    repository: Signal-Desktop
    access_token: ((sirmergealot-github-antiratelimit))

- name: git-ci-resource
  type: git
  source:
    branch: master
    uri: https://github.com/drahnr/signal-desktop-rpm

- name: git-signal-resource
  type: git
  source:
    branch: master
    uri: https://github.com/signalapp/Signal-Desktop


- name: copr-resource
  type: copr
  source:
    login: {{copr-login}}
    token: {{copr-token}}
    url: {{copr-url}}

- name: rpm-release
  type: s3
  source:
    endpoint: https://minio.spearow.io
    bucket: signal-desktop
    regexp: signal-desktop-(.*).rpm
    access_key_id: {{minio-access-key}}
    secret_access_key: {{minio-secret-key}}

jobs:
  - name: build-pkg-rpm
    public: true
    build_logs_to_retain: 3
    plan:
    - get: release
      params: { include_source_tarball: true }
      trigger: true
      resource: github-release-resource

    - get: container-fedora
      trigger: true 
    - get: spec
      resource: git-ci-resource
      trigger: true
    - get: source
      resource: git-signal-resource
    - task: create-rpm
      timeout: 30m
      image: container-fedora
      config:
        platform: linux
        inputs:
        - name: release
        - name: spec
        - name: source
        outputs:
        - name: srpm
        - name: rpm
        run:
          path: bash
          args:
          - -exc
          - |
            cat /etc/os-release
            dnf install -y git make gcc clang cmake rpmdevtools rpmspectool gnupg
            REFERENCE_DIR="$(pwd)"

            VERSION=$(cat release/version | cut -d "-" -f "1")
            VERSION_SUFFIX=$(cat release/version | cut -d "-" -f "2-")
            if [ -z ${VERSION_SUFFIX+x}]; do
              DOT_VERSION_SUFFIX=".${VERSION_SUFFIX}"
              DASH_VERSION_SUFFIX="-${VERSION_SUFFIX}"
            fi
            COMMIT_TAG=$(cat release/tag)
            NAME="Signal-Desktop"
            NAME_LOWERCASE="$(echo ${NAME} | tr '[:upper:]' '[:lower:]' )"
                        
            SPEC_SOURCE_DIR="${REFERENCE_DIR}/spec"
            GIT_REPO_DIR="${REFERENCE_DIR}/source"
            OUTPUT_RPM_DIR="${REFERENCE_DIR}/rpm"
            OUTPUT_SRPM_DIR="${REFERENCE_DIR}/srpm"
            
            pwd 2>&1
            RPMBUILD_DIR="${REFERENCE_DIR}/rpmbuild"
            
            mkdir -p "${RPMBUILD_DIR}/"{SOURCES,BUILD,RPMS,SRPMS,SPECS}
            #content is not the way github would format it
            #cp -v release/source.tar.gz "${RPMBUILD_DIR}/SOURCES/v${VERSION}.tar.gz"            
            
            cp -v "${SPEC_SOURCE_DIR}/${NAME_LOWERCASE}.spec" "${RPMBUILD_DIR}/SPECS"
            
            cd "${GIT_REPO_DIR}"
            COMMIT_SHA="$(git rev-parse ${COMMIT_TAG})"
            git checkout "${COMMIT_TAG}"
            echo "Using ${COMMIT_TAG} / ${COMMIT_SHA} @ ${VERSION}"
            git archive --format=tar --prefix="${NAME}-${VERSION}/" HEAD | gzip > "${RPMBUILD_DIR}/SOURCES/v${VERSION}.tar.gz"
            cd -
                                       
            cd "${RPMBUILD_DIR}"
            ls -al SOURCES

            curl --silent --location https://dl.yarnpkg.com/rpm/yarn.repo | tee /etc/yum.repos.d/yarn.repo

            # explicitly install modules first, so far there is no
            # way to combined this with builddep/spectool
            dnf module install -y nodejs:8
            dnf install -y 'dnf-command(builddep)'
            dnf builddep -y "SPECS/${NAME_LOWERCASE}.spec"

            # prep for signing
            echo "%_signature gpg" > $HOME/.rpmmacros
            echo "%_gpg_name  Bernhard Schuster" >> $HOME/.rpmmacros

            # FIXME, do not run as root
            rpmbuild \
            --define "_topdir ${RPMBUILD_DIR}" \
            --define "_builddir %{_topdir}/BUILD" \
            --define "_rpmdir %{_topdir}/RPMS" \
            --define "_srcrpmdir %{_topdir}/SRPMS" \
            --define "_specdir %{_topdir}/SPECS" \
            --define "_sourcedir  %{_topdir}/SOURCES" \
            --define "dot_version_suffix ${DOT_VERSION_SUFFIX}" \
            --define "dash_version_suffix ${DASH_VERSION_SUFFIX}" \
            -ba "SPECS/${NAME_LOWERCASE}.spec" || exit 1
            
            mkdir -p "${OUTPUT_RPM_DIR}" "${OUTPUT_SRPM_DIR}"
            rm -vf ${RPMBUILD_DIR}/RPMS/x86_64/${NAME_LOWERCASE}-*debug*.rpm
            cp -vf ${RPMBUILD_DIR}/RPMS/x86_64/${NAME_LOWERCASE}-*.rpm "${OUTPUT_RPM_DIR}"
            cp -vf ${RPMBUILD_DIR}/SRPMS/${NAME_LOWERCASE}-*.src.rpm "${OUTPUT_SRPM_DIR}"

    - put: rpm-release
      params:
        file: rpm/signal-desktop*.rpm
        acl: public-read

    - put: copr
      resource: copr-resource
      params:
        rpmbuild_dir: "srpm"
        chroots: ["fedora-rawhide-x86_64", "fedora-29-x86_64"]
        enable_net: false
        max_n_bytes: 250000000
        project_id: 18368
        regex: ".*signal-desktop-.*\\.src\\.rpm$"
      
